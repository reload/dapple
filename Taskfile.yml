version: '3'

output: prefixed

vars:
  COMPOSE_PREFIX: dapple
  CMS_COMPOSE_PROJECT_NAME: "{{.COMPOSE_PREFIX}}-cms"
  REACT_COMPOSE_PROJECT_NAME: "{{.COMPOSE_PREFIX}}-react"

tasks:
  init:
    summary: Setup this directory for development
    deps:
      - design-system:clone
      - react:clone
      - cms:clone
    cmds:
      - task: reset

  cleanup:
    cmds:
      - cmd: rm -rf design-system react cms
        # This may fail due to permission problems. Continue regardless to see
        # if Dapple works in a partial envinronment.
        ignore_error: true

  reinit:
    cmds:
      - task: cleanup
      - task: init

  reset:
    summary: Reset environment. This is useful when switching between tasks, branches etc.
    deps:
      - design-system:reset
      - react:reset
      - cms:reset

  design-system:clone:
    cmds:
      - git clone https://github.com/danskernesdigitalebibliotek/dpl-design-system design-system

  design-system:link:
    deps:
      - design-system:build
    dir: design-system
    generates:
      - package.json
    cmds:
      - cmd: yarn unlink
        ignore_error: true
      - yarn link

  design-system:build:
    dir: design-system
    sources:
      - src/**/*.scss
      - src/**/*.js
      - public/icons/**/*.svg
    generates:
      - build/**/*.*
      - dist.zip
    cmds:
      - yarn css:build
      - ./bundle.sh

  design-system:dev:
    dir: design-system
    run: once
    cmds:
      - yarn dev

  design-system:reset:
    dir: design-system
    cmds:
      - yarn install

  react:clone:
    cmds:
      - git clone https://github.com/danskernesdigitalebibliotek/dpl-react react
      # Set project name to avoid conflicts with single checkouts.
      - cp react/.env.example react/.env
      - echo "COMPOSE_PROJECT_NAME={{.REACT_COMPOSE_PROJECT_NAME}}" >> react/.env

  react:link:
    dir: react
    deps:
      - design-system:link
    cmds:
      - yarn link @danskernesdigitalebibliotek/dpl-design-system

  react:build:
    dir: react
    sources:
      - src/**/*.ts
      - src/**/*.tsx
      - src/**/*.js
      - src/**/*.jsx
      - src/**/*.scss
    cmds:
      - yarn build
    env:
      # Create an updated version.json file for our build.
      # This file is parsed by Drupal and the version added as query parameter
      # for JavaScript assets. An updated value will help bust caches.
      VERSION_FILE_NAME: "dapple"
      VERSION_FILE_VERSION:
        sh: 'echo "0.0.0-$(date +%s)"'

  react:dev:
    dir: react
    deps:
      - react:link
    run: once
    cmds:
      - yarn dev

  react:reset:
    dir: react
    cmds:
      - yarn install

  cms:clone:
    cmds:
      - git clone https://github.com/danskernesdigitalebibliotek/dpl-cms cms
      # Set project name to avoid conflicts with single checkouts.
      - sed "s|COMPOSE_PROJECT_NAME=dpl-cms|COMPOSE_PROJECT_NAME={{.CMS_COMPOSE_PROJECT_NAME}}|g" <cms/.env.example >cms/.env

  cms:link:
    dir: cms
    deps:
      - design-system:build
      - react:build
    cmds:
      - docker compose up -d
      - docker compose cp ../design-system/build/. php:/app/web/themes/custom/novel/assets/dpl-design-system
      - docker compose cp ../react/dist/. php:app/web/libraries/dpl-react
      - task dev:cache:clear:all

  cms:dev:
    dir: cms
    deps:
      - cms:link
    cmds:
      - task dev:start

  cms:reset:
    dir: cms
    cmds:
      - task dev:reset

  dev:react:
    deps:
      - design-system:build
    cmds:
      - task: react:dev

  dev:cms-react:
    deps:
      - cms:dev
    cmds:
      # react:dev has an interactive prompt about port assignment as we try to
      # run it on port 80 by default. To allow the user to reply we have to run
      # it as a separate task instead of a dependency.
      - task: react:dev
