version: '3'

output: prefixed

vars:
  COMPOSE_PREFIX: dapple
  CMS_COMPOSE_PROJECT_NAME: "{{.COMPOSE_PREFIX}}-cms"
  REACT_COMPOSE_PROJECT_NAME: "{{.COMPOSE_PREFIX}}-react"
  # Defaults
  DEFAULT_GIT_REPO_URL_DESIGN_SYSTEM: git@github.com:danskernesdigitalebibliotek/dpl-design-system
  DEFAULT_GIT_BRANCH_DESIGN_SYSTEM: develop
  DEFAULT_GIT_REPO_URL_REACT: git@github.com:danskernesdigitalebibliotek/dpl-react
  DEFAULT_GIT_BRANCH_REACT: develop
  DEFAULT_GIT_REPO_URL_CMS: git@github.com:danskernesdigitalebibliotek/dpl-cms
  DEFAULT_GIT_BRANCH_CMS: develop
  # Actual values
  GIT_REPO_URL_DESIGN_SYSTEM: '{{.GIT_REPO_URL_DESIGN_SYSTEM | default .DEFAULT_GIT_REPO_URL_DESIGN_SYSTEM}}'
  GIT_BRANCH_DESIGN_SYSTEM: '{{.GIT_BRANCH_DESIGN_SYSTEM | default .DEFAULT_GIT_BRANCH_DESIGN_SYSTEM}}'
  GIT_REPO_URL_REACT: '{{.GIT_REPO_URL_REACT | default .DEFAULT_GIT_REPO_URL_REACT}}'
  GIT_BRANCH_REACT: '{{.GIT_BRANCH_REACT | default .DEFAULT_GIT_BRANCH_REACT}}'
  GIT_REPO_URL_CMS: '{{.GIT_REPO_URL_CMS | default .DEFAULT_GIT_REPO_URL_CMS}}'
  GIT_BRANCH_CMS: '{{.GIT_BRANCH_CMS | default .DEFAULT_GIT_BRANCH_CMS}}'

# If vars are specified here they will override the defaults above.
dotenv: ['.env']

tasks:
  init:
    summary: Setup this directory for development
    deps:
      - design-system:clone
      - react:clone
      - cms:clone
    cmds:
      - task: install

  cleanup:
    cmds:
      - cmd: rm -rf design-system react cms
        # This may fail due to permission problems. Continue regardless to see
        # if Dapple works in a partial envinronment.
        ignore_error: true

  reinit:
    cmds:
      - task: cleanup
      - task: init

  install:
    summary: (Re)install all dependencies.
    deps:
      - design-system:install
      - react:install
      - cms:install

  design-system:clone:
    cmds:
      - git clone {{ .GIT_REPO_URL_DESIGN_SYSTEM }} -b {{ .GIT_BRANCH_DESIGN_SYSTEM }} design-system

  design-system:install:
    dir: design-system
    sources:
      - package.json
      - yarn.lock
    generates:
      - node_modules/*
    cmds:
      - yarn install

  design-system:link:
    deps:
      - design-system:build
    dir: design-system
    generates:
      - package.json
    cmds:
      - cmd: yarn unlink
        ignore_error: true
      - yarn link

  design-system:build:
    dir: design-system
    sources:
      - src/**/*.scss
      - src/**/*.js
      - public/icons/**/*.svg
    generates:
      - build/**/*.*
      - dist.zip
    cmds:
      - yarn css:build
      - ./bundle.sh

  design-system:dev:
    dir: design-system
    run: once
    cmds:
      - yarn dev

  react:clone:
    cmds:
      - git clone {{ .GIT_REPO_URL_REACT}} -b {{ .GIT_BRANCH_REACT }} react
      # Set project name to avoid conflicts with single checkouts.
      - cp react/.env.example react/.env
      - echo "COMPOSE_PROJECT_NAME={{.REACT_COMPOSE_PROJECT_NAME}}" >> react/.env

  react:install:
    dir: react
    sources:
      - package.json
      - yarn.lock
    generates:
      - node_modules/*
    cmds:
      - yarn install

  react:link:
    dir: react
    deps:
      - design-system:link
    cmds:
      - yarn link @danskernesdigitalebibliotek/dpl-design-system

  react:build:
    dir: react
    sources:
      - src/**/*.ts
      - src/**/*.tsx
      - src/**/*.js
      - src/**/*.jsx
      - src/**/*.scss
    cmds:
      - yarn build
    env:
      # Create an updated version.json file for our build.
      # This file is parsed by Drupal and the version added as query parameter
      # for JavaScript assets. An updated value will help bust caches.
      VERSION_FILE_NAME: "dapple"
      VERSION_FILE_VERSION:
        sh: 'echo "0.0.0-$(date +%s)"'

  react:dev:
    dir: react
    deps:
      - react:link
    run: once
    interactive: true
    cmds:
      - yarn dev

  cms:clone:
    cmds:
      - git clone {{ .GIT_REPO_URL_CMS }} -b {{ .GIT_BRANCH_CMS }} cms
      # Set project name to avoid conflicts with single checkouts.
      - sed "s|COMPOSE_PROJECT_NAME=dpl-cms|COMPOSE_PROJECT_NAME={{.CMS_COMPOSE_PROJECT_NAME}}|g" <cms/.env.example >cms/.env

  cms:install:
    dir: cms
    sources:
      - composer.lock
    generates:
      - vendor/*
    cmds:
      - task dev:cli -- composer install

  cms:link:
    dir: cms
    deps:
      - design-system:build
      - react:build
    cmds:
      - docker compose up -d
      - docker compose cp ../design-system/build/. php:/app/web/themes/custom/novel/assets/dpl-design-system
      - docker compose cp ../react/dist/. php:app/web/libraries/dpl-react
      - task dev:cache:clear:all

  cms:dev:
    dir: cms
    run: once
    cmds:
      - task dev:reset

  dev:react:
    deps:
      - design-system:build
    cmds:
      - task: react:dev

  dev:cms:
    cmds:
      - task: cms:dev
      - task: cms:link

  dev:cms-react:
    deps:
      - cms:dev
    cmds:
      # react:dev has an interactive prompt about port assignment as we try to
      # run it on port 80 by default. To allow the user to reply we have to run
      # it as a separate task instead of a dependency.
      - task: react:dev
      - task: cms:link