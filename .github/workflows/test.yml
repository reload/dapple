name: Test

on:
  push:

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          # TODO replace which with what can be read from .nvmrc if we get a
          # separation between checkout and install
          node-version: 'lts/*'
          registry-url: 'https://npm.pkg.github.com'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup go-task
        uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Initialize environment
        run: task init
      - name: Link Design system to React components
        run: task react:link
      - name: Link Design system and React components to CMS
        run: task cms:link
      - name: Link Design system to React components (again)
        run: task react:link
      - name: Link Design system and React components to CMS (again)
        run: task cms:link
      - name: Test React components after linking
        uses: cypress-io/github-action@v6
        with:
          start: yarn start:storybook:test
          wait-on: "http://localhost:57021"
          browser: chrome
          working-directory: react
          # A single test should be sufficient to ensure that Storybook can
          # start, the React components work etc. after linking.
          # The demo modal test is simple and quick to execute.
          spec: src/apps/demo-modal/demo-modal.test.ts
      - name: Test CMS after linking
        # A single request to see that the frontpage can be retrieved should be
        # sufficient to ensure that Drupal can bootstrap and return a page.
        # COMPOSE_PROJECT_NAME must match the value from Dapple Taskfile.yml.
        run: "curl --fail http://localhost:$(COMPOSE_PROJECT_NAME=dapple docker compose port varnish 8080 | cut -d: -f2)"
